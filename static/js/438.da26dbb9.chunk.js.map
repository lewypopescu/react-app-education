{"version":3,"file":"static/js/438.da26dbb9.chunk.js","mappings":"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","sources":["webpack://react-app-education/./src/components/InfoBlock/InfoBlock.module.css?7bcf","components/InfoBlock/InfoBlock.jsx","webpack://react-app-education/./src/components/Modal/Modal.module.css?28d7","components/Modal/index.js","components/Modal/Modal.jsx","webpack://react-app-education/./src/components/Tutors/TutorsList.module.css?2d0a","webpack://react-app-education/./src/components/Tutors/Tutor/Tutor.module.css?f1b7","webpack://react-app-education/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","components/Button/index.js","components/Tutors/Tutor/Tutor.jsx","components/Tutors/Tutor/index.js","webpack://react-app-education/./src/components/common/Input/Input.module.css?9b15","components/common/Input/index.js","components/common/Input/Input.jsx","components/common/Loading/index.js","components/common/Loading/Loading.jsx","webpack://react-app-education/./src/components/common/Alert/Alert.module.css?1544","components/common/Alert/index.js","components/common/Alert/Alert.jsx","components/Tutors/TutorsList.jsx","components/Tutors/index.js","../node_modules/@uidotdev/usehooks/index.js","webpack://react-app-education/./src/components/University/University.module.css?1cad","components/University/University.jsx","webpack://react-app-education/./src/components/Faculties/Faculties.module.css?f5b9","components/Faculties/Faculties.jsx","components/Faculties/index.js","pages/UniversityPage/UniversityPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"info\":\"InfoBlock_info__PEQwK\",\"modal\":\"InfoBlock_modal__MhDZ0\"};","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { BsThreeDotsVertical, BsPencilSquare } from \"react-icons/bs\";\nimport { BiSolidTrash } from \"react-icons/bi\";\n\nimport style from \"./InfoBlock.module.css\";\n\nimport editImg from \"../../images/icon/pencil.png\";\nimport deleteImg from \"../../images/icon/hand-pointing.png\";\n\nimport Modal from \"../Modal\";\n\nexport default function InfoBlock({ type, id, info, onDelete, onEdit }) {\n  const [modal, setModal] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [typeModal, setTypeModal] = useState(\"edit\");\n  const dispatch = useDispatch();\n\n  const openModalEdit = () => {\n    setIsModalOpen(true);\n    setModal(false);\n    setTypeModal(\"edit\");\n  };\n\n  const openModalDelete = () => {\n    setIsModalOpen(true);\n    setModal(false);\n    setTypeModal(\"delete\");\n  };\n\n  const onCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleModal = () => {\n    setModal(!modal);\n  };\n\n  const handlerDelete = () => {\n    dispatch(onDelete(id));\n    setIsModalOpen(false);\n  };\n\n  const handlerEdit = () => {\n    dispatch(onEdit({ id, name: newName }));\n    setIsModalOpen(false);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Escape\") {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    if (modal) {\n      document.addEventListener(\"keydown\", handleKeyDown);\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [modal, setModal]);\n\n  console.log(modal);\n  return (\n    <div className={style.info}>\n      <Link to={`/faculties/${info}`}>\n        <p>{info}</p>\n      </Link>\n      <button onClick={handleModal}>\n        <BsThreeDotsVertical />\n      </button>\n\n      {modal && (\n        <div className={style.modal}>\n          <button onClick={openModalEdit}>\n            <BsPencilSquare />\n            <p>Edit</p>\n          </button>\n          <button onClick={openModalDelete}>\n            <BiSolidTrash />\n            <p>Delete</p>\n          </button>\n        </div>\n      )}\n\n      <Modal isOpen={isModalOpen} onClose={onCloseModal}>\n        {typeModal === \"edit\" ? (\n          <>\n            <img src={editImg} width=\"40\" alt=\"Edit\" />\n            <h2>EDIT {type} INFORMATION</h2>\n            <label>\n              {type}\n              <br />\n              <input\n                type=\"text\"\n                onChange={(event) => {\n                  setNewName(event.target.value);\n                }}\n                name={type}\n                value={newName}\n                placeholder={type}\n              />\n            </label>\n            <div>\n              <button onClick={handlerEdit}>Save</button>\n            </div>\n          </>\n        ) : (\n          <>\n            <img src={deleteImg} width=\"40\" alt=\"Delete\" />\n            <h2>{type} REMOVAL</h2>\n            <p>\n              All materials and information about the faculty will be deleted\n            </p>\n            <div>\n              <button onClick={null}>NO</button>\n              <button onClick={handlerDelete}>YES</button>\n            </div>\n          </>\n        )}\n      </Modal>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__r63M6\",\"modal\":\"Modal_modal__DJDMv\",\"header\":\"Modal_header__fOQI0\",\"closeBtn\":\"Modal_closeBtn__mlOa4\",\"content\":\"Modal_content__gGb69\",\"title\":\"Modal_title__3HkNf\"};","import Modal from './Modal';\n\nexport default Modal;\n","import React, { useEffect } from 'react';\nimport style from './Modal.module.css';\n\nexport default function Modal({ isOpen, onClose, children }) {\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose, handleKeyDown]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <div className={style.modalOverlay}>\n      <div className={style.modalContent}>\n        <button className={style.closeButton} onClick={onClose}>\n          &times;\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TutorsList_list__Xozn0\",\"form\":\"TutorsList_form__CO-nU\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Tutor_item__++0J3\",\"address\":\"Tutor_address__BPuki\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\",\"primary\":\"Button_primary__XYgy-\",\"secondary\":\"Button_secondary__QwN49\",\"icon\":\"Button_icon__KeIH3\"};","import React from 'react';\n\nimport styles from './Button.module.css';\n\nfunction Button({ variant = '', handleClick, children }) {\n  const getButtonClass = () => {\n    if (variant === 'secondary') {\n      return `${styles.button} ${styles.secondary}`;\n    }\n\n    if (variant === 'icon') {\n      return `${styles.button} ${styles.icon}`;\n    }\n\n    return `${styles.button} ${styles.primary}`;\n  };\n\n  return (\n    <button className={`${getButtonClass()}`} onClick={handleClick}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import Button from \"./Button\";\n\nexport default Button;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FaTrash } from 'react-icons/fa';\nimport styles from './Tutor.module.css';\n\nimport Button from '../../Button';\nfunction Tutor({ item, handleDelete }) {\n  const name = `${item.firstName} ${item.lastName}`;\n\n  return (\n    <div key={item.id} className={styles.item}>\n      <div>{name}</div>\n      <div className={styles.address}>\n        <span>{item.email}</span>\n        <span>{item.phone}</span>\n        <span>{item.city}</span>\n      </div>\n      <div>{item?.options}</div>\n      <span>\n        <Button variant=\"icon\" handleClick={handleDelete}>\n          <FaTrash />\n        </Button>\n      </span>\n    </div>\n  );\n}\n\nTutor.propTypes = {\n  item: PropTypes.object,\n};\n\nexport default Tutor;\n","import Tutor from \"./Tutor\";\n\nexport default Tutor;","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Input_field__nN0SU\",\"input\":\"Input_input__wmxoC\",\"requiredIcon\":\"Input_requiredIcon__VgxxF\"};","import Input from \"./Input\";\n\nexport default Input;\n","import React from \"react\";\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  label,\n  name,\n  type,\n  value,\n  handleChange,\n  required = false,\n}) {\n  let inputProps = { label, name, type, value };\n\n  if (required) {\n    inputProps.required = true;\n  }\n\n  if (type === \"tel\") {\n    inputProps.pattern =\n      \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\";\n    inputProps.title =\n      \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\";\n  }\n\n  return (\n    <div className={styles.field}>\n      <input className={styles.input} {...inputProps} onChange={handleChange} />\n      <label htmlFor={name}>\n        {label} {required && <span className={styles.requiredIcon}>*</span>}\n      </label>\n    </div>\n  );\n}\n","import Loading from \"./Loading\";\n\nexport default Loading;","import React from \"react\";\n\n// import styles from \"./Loading.module.css\";\n\nexport default function Loading() {\n  return <div>Loading...</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Alert_card__s7g-y\"};","import Alert from \"./Alert\";\n\nexport default Alert;","import React from \"react\";\nimport styles from \"./Alert.module.css\";\n\nexport default function Alert({ message }) {\n  return <div className={styles.card}>{message}</div>;\n}\n","import React, { useState } from 'react';\n// import axios from \"axios\"; z\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useDebounce } from '@uidotdev/usehooks';\n\nimport { FaPlusCircle } from 'react-icons/fa';\nimport styles from './TutorsList.module.css';\n\nimport Tutor from './Tutor';\nimport Button from '../Button';\nimport Input from '../common/Input';\nimport Loading from '../common/Loading';\nimport Alert from '../common/Alert';\n\nimport useToggle from '../../hooks/useToggle';\n\nimport {\n  selectTutors,\n  selectTutorsError,\n  selectTutorsLoading,\n} from '../../redux/selectors';\n\nimport { addTutor, deleteTutor } from '../../redux/operations';\n\n// axios.defaults.baseURL = \"http://localhost:3001\";\n\nconst INITIAL_FORM_STATE = {\n  lastName: '',\n  firstName: '',\n  email: '',\n  phone: '',\n  city: '',\n};\n\nexport default function TutorsList() {\n  // const [tutors, setTutors] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  const [isFormVisible, toggleForm] = useToggle(false);\n  const [formData, setFormData] = useState({ ...INITIAL_FORM_STATE });\n\n  const tutors = useSelector(selectTutors);\n  const loading = useSelector(selectTutorsLoading);\n  const error = useSelector(selectTutorsError);\n\n  const dispatch = useDispatch();\n\n  function renderList(items) {\n    return items.map(item => (\n      <Tutor\n        key={item.phone}\n        item={item}\n        handleDelete={() => dispatch(deleteTutor(item.id))}\n      />\n    ));\n  }\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const data = formData;\n    dispatch(addTutor(data));\n    setFormData({ ...INITIAL_FORM_STATE });\n    toggleForm();\n  }\n\n  function getTutorsCount(tutors) {\n    return tutors.length;\n  }\n\n  const filteredTutorsList = tutors.filter(tutor => {\n    return (\n      tutor.firstName\n        .toLowerCase()\n        .includes(debouncedSearchTerm.toLowerCase()) ||\n      tutor.lastName.toLowerCase().includes(debouncedSearchTerm.toLowerCase())\n    );\n  });\n\n  return (\n    <section className=\"section\">\n      <h2 className=\"h2\">Tutors</h2>\n      <input\n        type=\"text\"\n        name=\"searchTerm\"\n        value={searchTerm}\n        onChange={e => setSearchTerm(e.target.value)}\n      />\n      <div className={styles.list}>\n        {loading && <Loading />}\n        {error && <Alert message={error} />}\n        {renderList(filteredTutorsList)}\n        <p>Number of tutors found {getTutorsCount(filteredTutorsList)}</p>\n        <p>Number of tutors {getTutorsCount(tutors)} </p>\n      </div>\n\n      {isFormVisible && (\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <h3>Adding a tutor</h3>\n          <Input\n            label=\"Surname\"\n            name=\"firstName\"\n            type=\"text\"\n            value={formData.firstName}\n            handleChange={handleChange}\n            required={true}\n          />\n\n          <Input\n            label=\"Name\"\n            name=\"lastName\"\n            type=\"text\"\n            value={formData.lastName}\n            handleChange={handleChange}\n            required={true}\n          />\n\n          <Input\n            label=\"Phone\"\n            name=\"phone\"\n            type=\"tel\"\n            value={formData.phone}\n            handleChange={handleChange}\n            required={true}\n          />\n\n          <Input\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            value={formData.email}\n            handleChange={handleChange}\n            required={true}\n          />\n\n          <Input\n            label=\"City\"\n            name=\"city\"\n            type=\"text\"\n            value={formData.city}\n            handleChange={handleChange}\n            required={true}\n          />\n\n          <Button type=\"submit\" handleClick={() => {}}>\n            Invite\n          </Button>\n        </form>\n      )}\n\n      <Button handleClick={toggleForm}>\n        <FaPlusCircle />\n        Add Tutor\n      </Button>\n    </section>\n  );\n}\n\nTutorsList.propTypes = {\n  tutors: PropTypes.array,\n};\n","import TutorsList from \"./TutorsList\";\n\nexport default TutorsList;","import * as React from \"react\";\n\nfunction isShallowEqual(object1, object2) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (let key of keys1) {\n    if (object1[key] !== object2[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isTouchEvent({ nativeEvent }) {\n  return window.TouchEvent\n    ? nativeEvent instanceof TouchEvent\n    : \"touches\" in nativeEvent;\n}\n\nfunction isMouseEvent(event) {\n  return event.nativeEvent instanceof MouseEvent;\n}\n\nfunction throttle(cb, ms) {\n  let lastTime = 0;\n  return () => {\n    const now = Date.now();\n    if (now - lastTime >= ms) {\n      cb();\n      lastTime = now;\n    }\n  };\n}\n\nfunction isPlainObject(value) {\n  return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n\nfunction dispatchStorageEvent(key, newValue) {\n  window.dispatchEvent(new StorageEvent(\"storage\", { key, newValue }));\n}\n\nexport function useBattery() {\n  const [state, setState] = React.useState({\n    supported: true,\n    loading: true,\n    level: null,\n    charging: null,\n    chargingTime: null,\n    dischargingTime: null,\n  });\n\n  React.useEffect(() => {\n    if (!navigator.getBattery) {\n      setState((s) => ({\n        ...s,\n        supported: false,\n        loading: false,\n      }));\n      return;\n    }\n\n    let battery = null;\n\n    const handleChange = () => {\n      setState({\n        supported: true,\n        loading: false,\n        level: battery.level,\n        charging: battery.charging,\n        chargingTime: battery.chargingTime,\n        dischargingTime: battery.dischargingTime,\n      });\n    };\n\n    navigator.getBattery().then((b) => {\n      battery = b;\n      handleChange();\n\n      b.addEventListener(\"levelchange\", handleChange);\n      b.addEventListener(\"chargingchange\", handleChange);\n      b.addEventListener(\"chargingtimechange\", handleChange);\n      b.addEventListener(\"dischargingtimechange\", handleChange);\n    });\n\n    return () => {\n      if (battery) {\n        battery.removeEventListener(\"levelchange\", handleChange);\n        battery.removeEventListener(\"chargingchange\", handleChange);\n        battery.removeEventListener(\"chargingtimechange\", handleChange);\n        battery.removeEventListener(\"dischargingtimechange\", handleChange);\n      }\n    };\n  }, []);\n\n  return state;\n}\n\nexport function useClickAway(cb) {\n  const ref = React.useRef(null);\n  const refCb = React.useRef(cb);\n\n  React.useLayoutEffect(() => {\n    refCb.current = cb;\n  });\n\n  React.useEffect(() => {\n    const handler = (e) => {\n      const element = ref.current;\n      if (element && !element.contains(e.target)) {\n        refCb.current(e);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handler);\n    document.addEventListener(\"touchstart\", handler);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handler);\n      document.removeEventListener(\"touchstart\", handler);\n    };\n  }, []);\n\n  return ref;\n}\n\nfunction oldSchoolCopy(text) {\n  const tempTextArea = document.createElement(\"textarea\");\n  tempTextArea.value = text;\n  document.body.appendChild(tempTextArea);\n  tempTextArea.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(tempTextArea);\n}\n\nexport function useCopyToClipboard() {\n  const [state, setState] = React.useState(null);\n\n  const copyToClipboard = React.useCallback((value) => {\n    const handleCopy = async () => {\n      try {\n        if (navigator?.clipboard?.writeText) {\n          await navigator.clipboard.writeText(value);\n          setState(value);\n        } else {\n          throw new Error(\"writeText not supported\");\n        }\n      } catch (e) {\n        oldSchoolCopy(value);\n        setState(value);\n      }\n    };\n\n    handleCopy();\n  }, []);\n\n  return [state, copyToClipboard];\n}\n\nexport function useCounter(startingValue = 0, options = {}) {\n  const { min, max } = options;\n\n  if (typeof min === \"number\" && startingValue < min) {\n    throw new Error(\n      `Your starting value of ${startingValue} is less than your min of ${min}.`\n    );\n  }\n\n  if (typeof max === \"number\" && startingValue > max) {\n    throw new Error(\n      `Your starting value of ${startingValue} is greater than your max of ${max}.`\n    );\n  }\n\n  const [count, setCount] = React.useState(startingValue);\n\n  const increment = React.useCallback(() => {\n    setCount((c) => {\n      const nextCount = c + 1;\n\n      if (typeof max === \"number\" && nextCount > max) {\n        return c;\n      }\n\n      return nextCount;\n    });\n  }, [max]);\n\n  const decrement = React.useCallback(() => {\n    setCount((c) => {\n      const nextCount = c - 1;\n\n      if (typeof min === \"number\" && nextCount < min) {\n        return c;\n      }\n\n      return nextCount;\n    });\n  }, [min]);\n\n  const set = React.useCallback(\n    (nextCount) => {\n      setCount((c) => {\n        if (typeof max === \"number\" && nextCount > max) {\n          return c;\n        }\n\n        if (typeof min === \"number\" && nextCount < min) {\n          return c;\n        }\n\n        return nextCount;\n      });\n    },\n    [max, min]\n  );\n\n  const reset = React.useCallback(() => {\n    setCount(startingValue);\n  }, [startingValue]);\n\n  return [\n    count,\n    {\n      increment,\n      decrement,\n      set,\n      reset,\n    },\n  ];\n}\n\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n\n  React.useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport function useDefault(initialValue, defaultValue) {\n  const [state, setState] = React.useState(initialValue);\n\n  if (typeof state === \"undefined\" || state === null) {\n    return [defaultValue, setState];\n  }\n\n  return [state, setState];\n}\n\nexport function useDocumentTitle(title) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport function useFavicon(url) {\n  React.useEffect(() => {\n    let link = document.querySelector(`link[rel~=\"icon\"]`);\n\n    if (!link) {\n      link = document.createElement(\"link\");\n      link.type = \"image/x-icon\";\n      link.rel = \"icon\";\n      link.href = url;\n      document.head.appendChild(link);\n    } else {\n      link.href = url;\n    }\n  }, [url]);\n}\n\nexport function useGeolocation(options = {}) {\n  const [state, setState] = React.useState({\n    loading: true,\n    accuracy: null,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    latitude: null,\n    longitude: null,\n    speed: null,\n    timestamp: null,\n    error: null,\n  });\n\n  const optionsRef = React.useRef(options);\n\n  React.useEffect(() => {\n    const onEvent = ({ coords, timestamp }) => {\n      setState({\n        loading: false,\n        timestamp,\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        altitude: coords.altitude,\n        accuracy: coords.accuracy,\n        altitudeAccuracy: coords.altitudeAccuracy,\n        heading: coords.heading,\n        speed: coords.speed,\n      });\n    };\n\n    const onEventError = (error) => {\n      setState((s) => ({\n        ...s,\n        loading: false,\n        error,\n      }));\n    };\n\n    navigator.geolocation.getCurrentPosition(\n      onEvent,\n      onEventError,\n      optionsRef.current\n    );\n\n    const watchId = navigator.geolocation.watchPosition(\n      onEvent,\n      onEventError,\n      optionsRef.current\n    );\n\n    return () => {\n      navigator.geolocation.clearWatch(watchId);\n    };\n  }, []);\n\n  return state;\n}\n\nconst initialUseHistoryStateState = {\n  past: [],\n  present: null,\n  future: [],\n};\n\nconst useHistoryStateReducer = (state, action) => {\n  const { past, present, future } = state;\n\n  if (action.type === \"UNDO\") {\n    return {\n      past: past.slice(0, past.length - 1),\n      present: past[past.length - 1],\n      future: [present, ...future],\n    };\n  } else if (action.type === \"REDO\") {\n    return {\n      past: [...past, present],\n      present: future[0],\n      future: future.slice(1),\n    };\n  } else if (action.type === \"SET\") {\n    const { newPresent } = action;\n\n    if (action.newPresent === present) {\n      return state;\n    }\n\n    return {\n      past: [...past, present],\n      present: newPresent,\n      future: [],\n    };\n  } else if (action.type === \"CLEAR\") {\n    return {\n      ...initialUseHistoryStateState,\n      present: action.initialPresent,\n    };\n  } else {\n    throw new Error(\"Unsupported action type\");\n  }\n};\n\nexport function useHistoryState(initialPresent = {}) {\n  const initialPresentRef = React.useRef(initialPresent);\n\n  const [state, dispatch] = React.useReducer(useHistoryStateReducer, {\n    ...initialUseHistoryStateState,\n    present: initialPresentRef.current,\n  });\n\n  const canUndo = state.past.length !== 0;\n  const canRedo = state.future.length !== 0;\n\n  const undo = React.useCallback(() => {\n    if (canUndo) {\n      dispatch({ type: \"UNDO\" });\n    }\n  }, [canUndo]);\n\n  const redo = React.useCallback(() => {\n    if (canRedo) {\n      dispatch({ type: \"REDO\" });\n    }\n  }, [canRedo]);\n\n  const set = React.useCallback(\n    (newPresent) => dispatch({ type: \"SET\", newPresent }),\n    []\n  );\n\n  const clear = React.useCallback(\n    () =>\n      dispatch({ type: \"CLEAR\", initialPresent: initialPresentRef.current }),\n    []\n  );\n\n  return { state: state.present, set, undo, redo, clear, canUndo, canRedo };\n}\n\nexport function useHover() {\n  const [hovering, setHovering] = React.useState(false);\n  const previousNode = React.useRef(null);\n\n  const handleMouseEnter = React.useCallback(() => {\n    setHovering(true);\n  }, []);\n\n  const handleMouseLeave = React.useCallback(() => {\n    setHovering(false);\n  }, []);\n\n  const customRef = React.useCallback(\n    (node) => {\n      if (previousNode.current?.nodeType === Node.ELEMENT_NODE) {\n        previousNode.current.removeEventListener(\n          \"mouseenter\",\n          handleMouseEnter\n        );\n        previousNode.current.removeEventListener(\n          \"mouseleave\",\n          handleMouseLeave\n        );\n      }\n\n      if (node?.nodeType === Node.ELEMENT_NODE) {\n        node.addEventListener(\"mouseenter\", handleMouseEnter);\n        node.addEventListener(\"mouseleave\", handleMouseLeave);\n      }\n\n      previousNode.current = node;\n    },\n    [handleMouseEnter, handleMouseLeave]\n  );\n\n  return [customRef, hovering];\n}\n\nexport function useIdle(ms = 1000 * 60) {\n  const [idle, setIdle] = React.useState(false);\n\n  React.useEffect(() => {\n    let timeoutId;\n\n    const handleTimeout = () => {\n      setIdle(true);\n    };\n\n    const handleEvent = throttle((e) => {\n      setIdle(false);\n\n      window.clearTimeout(timeoutId);\n      timeoutId = window.setTimeout(handleTimeout, ms);\n    }, 500);\n\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        handleEvent();\n      }\n    };\n\n    timeoutId = window.setTimeout(handleTimeout, ms);\n\n    window.addEventListener(\"mousemove\", handleEvent);\n    window.addEventListener(\"mousedown\", handleEvent);\n    window.addEventListener(\"resize\", handleEvent);\n    window.addEventListener(\"keydown\", handleEvent);\n    window.addEventListener(\"touchstart\", handleEvent);\n    window.addEventListener(\"wheel\", handleEvent);\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleEvent);\n      window.removeEventListener(\"mousedown\", handleEvent);\n      window.removeEventListener(\"resize\", handleEvent);\n      window.removeEventListener(\"keydown\", handleEvent);\n      window.removeEventListener(\"touchstart\", handleEvent);\n      window.removeEventListener(\"wheel\", handleEvent);\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n      window.clearTimeout(timeoutId);\n    };\n  }, [ms]);\n\n  return idle;\n}\n\nexport function useIntersectionObserver(options = {}) {\n  const { threshold = 1, root = null, rootMargin = \"0px\" } = options;\n  const [entry, setEntry] = React.useState(null);\n\n  const previousObserver = React.useRef(null);\n\n  const customRef = React.useCallback(\n    (node) => {\n      if (previousObserver.current) {\n        previousObserver.current.disconnect();\n        previousObserver.current = null;\n      }\n\n      if (node?.nodeType === Node.ELEMENT_NODE) {\n        const observer = new IntersectionObserver(\n          ([entry]) => {\n            setEntry(entry);\n          },\n          { threshold, root, rootMargin }\n        );\n\n        observer.observe(node);\n        previousObserver.current = observer;\n      }\n    },\n    [threshold, root, rootMargin]\n  );\n\n  return [customRef, entry];\n}\n\nexport function useIsClient() {\n  const [isClient, setIsClient] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  return isClient;\n}\n\nexport function useIsFirstRender() {\n  const renderRef = React.useRef(true);\n\n  if (renderRef.current === true) {\n    renderRef.current = false;\n    return true;\n  }\n\n  return renderRef.current;\n}\n\nexport function useList(defaultList = []) {\n  const [list, setList] = React.useState(defaultList);\n\n  const set = React.useCallback((l) => {\n    setList(l);\n  }, []);\n\n  const push = React.useCallback((element) => {\n    setList((l) => [...l, element]);\n  }, []);\n\n  const removeAt = React.useCallback((index) => {\n    setList((l) => [...l.slice(0, index), ...l.slice(index + 1)]);\n  }, []);\n\n  const insertAt = React.useCallback((index, element) => {\n    setList((l) => [...l.slice(0, index), element, ...l.slice(index)]);\n  }, []);\n\n  const updateAt = React.useCallback((index, element) => {\n    setList((l) => l.map((e, i) => (i === index ? element : e)));\n  }, []);\n\n  const clear = React.useCallback(() => setList([]), []);\n\n  return [list, { set, push, removeAt, insertAt, updateAt, clear }];\n}\n\nconst setLocalStorageItem = (key, value) => {\n  const stringifiedValue = JSON.stringify(value);\n  window.localStorage.setItem(key, stringifiedValue);\n  dispatchStorageEvent(key, stringifiedValue);\n};\n\nconst removeLocalStorageItem = (key) => {\n  window.localStorage.removeItem(key);\n  dispatchStorageEvent(key, null);\n};\n\nconst getLocalStorageItem = (key) => {\n  return window.localStorage.getItem(key);\n};\n\nconst useLocalStorageSubscribe = (callback) => {\n  window.addEventListener(\"storage\", callback);\n  return () => window.removeEventListener(\"storage\", callback);\n};\n\nconst getLocalStorageServerSnapshot = () => {\n  throw Error(\"useLocalStorage is a client-only hook\");\n};\n\nexport function useLocalStorage(key, initialValue) {\n  const getSnapshot = () => getLocalStorageItem(key);\n\n  const store = React.useSyncExternalStore(\n    useLocalStorageSubscribe,\n    getSnapshot,\n    getLocalStorageServerSnapshot\n  );\n\n  const setState = React.useCallback(\n    (v) => {\n      try {\n        const nextState = typeof v === \"function\" ? v(JSON.parse(store)) : v;\n\n        if (nextState === undefined || nextState === null) {\n          removeLocalStorageItem(key);\n        } else {\n          setLocalStorageItem(key, nextState);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    [key, store]\n  );\n\n  React.useEffect(() => {\n    if (\n      getLocalStorageItem(key) === null &&\n      typeof initialValue !== \"undefined\"\n    ) {\n      setLocalStorageItem(key, initialValue);\n    }\n  }, [key, initialValue]);\n\n  return [store ? JSON.parse(store) : initialValue, setState];\n}\n\nexport function useLockBodyScroll() {\n  React.useLayoutEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, []);\n}\n\nexport function useLongPress(callback, options = {}) {\n  const { threshold = 400, onStart, onFinish, onCancel } = options;\n  const isLongPressActive = React.useRef(false);\n  const isPressed = React.useRef(false);\n  const timerId = React.useRef();\n\n  return React.useMemo(() => {\n    if (typeof callback !== \"function\") {\n      return {};\n    }\n\n    const start = (event) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) return;\n\n      if (onStart) {\n        onStart(event);\n      }\n\n      isPressed.current = true;\n      timerId.current = setTimeout(() => {\n        callback(event);\n        isLongPressActive.current = true;\n      }, threshold);\n    };\n\n    const cancel = (event) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) return;\n\n      if (isLongPressActive.current) {\n        if (onFinish) {\n          onFinish(event);\n        }\n      } else if (isPressed.current) {\n        if (onCancel) {\n          onCancel(event);\n        }\n      }\n\n      isLongPressActive.current = false;\n      isPressed.current = false;\n\n      if (timerId.current) {\n        window.clearTimeout(timerId.current);\n      }\n    };\n\n    const mouseHandlers = {\n      onMouseDown: start,\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n    };\n\n    const touchHandlers = {\n      onTouchStart: start,\n      onTouchEnd: cancel,\n    };\n\n    return {\n      ...mouseHandlers,\n      ...touchHandlers,\n    };\n  }, [callback, threshold, onCancel, onFinish, onStart]);\n}\n\nexport function useMap(initialState) {\n  const mapRef = React.useRef(new Map(initialState));\n  const [, reRender] = React.useReducer((x) => x + 1, 0);\n\n  mapRef.current.set = (...args) => {\n    Map.prototype.set.apply(mapRef.current, args);\n    reRender();\n    return mapRef.current;\n  };\n\n  mapRef.current.clear = (...args) => {\n    Map.prototype.clear.apply(mapRef.current, args);\n    reRender();\n  };\n\n  mapRef.current.delete = (...args) => {\n    const res = Map.prototype.delete.apply(mapRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  return mapRef.current;\n}\n\nexport function useMeasure() {\n  const [dimensions, setDimensions] = React.useState({\n    width: null,\n    height: null,\n  });\n\n  const previousObserver = React.useRef(null);\n\n  const customRef = React.useCallback((node) => {\n    if (previousObserver.current) {\n      previousObserver.current.disconnect();\n      previousObserver.current = null;\n    }\n\n    if (node?.nodeType === Node.ELEMENT_NODE) {\n      const observer = new ResizeObserver(([entry]) => {\n        if (entry && entry.borderBoxSize) {\n          const { inlineSize: width, blockSize: height } =\n            entry.borderBoxSize[0];\n\n          setDimensions({ width, height });\n        }\n      });\n\n      observer.observe(node);\n      previousObserver.current = observer;\n    }\n  }, []);\n\n  return [customRef, dimensions];\n}\n\nexport function useMediaQuery(query) {\n  const subscribe = React.useCallback(\n    (callback) => {\n      const matchMedia = window.matchMedia(query);\n\n      matchMedia.addEventListener(\"change\", callback);\n      return () => {\n        matchMedia.removeEventListener(\"change\", callback);\n      };\n    },\n    [query]\n  );\n\n  const getSnapshot = () => {\n    return window.matchMedia(query).matches;\n  };\n\n  const getServerSnapshot = () => {\n    throw Error(\"useMediaQuery is a client-only hook\");\n  };\n\n  return React.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\nexport function useMouse() {\n  const [state, setState] = React.useState({\n    x: 0,\n    y: 0,\n    elementX: 0,\n    elementY: 0,\n    elementPositionX: 0,\n    elementPositionY: 0,\n  });\n\n  const ref = React.useRef(null);\n\n  React.useLayoutEffect(() => {\n    const handleMouseMove = (event) => {\n      let newState = {\n        x: event.pageX,\n        y: event.pageY,\n      };\n\n      if (ref.current?.nodeType === Node.ELEMENT_NODE) {\n        const { left, top } = ref.current.getBoundingClientRect();\n        const elementPositionX = left + window.scrollX;\n        const elementPositionY = top + window.scrollY;\n        const elementX = event.pageX - elementPositionX;\n        const elementY = event.pageY - elementPositionY;\n\n        newState.elementX = elementX;\n        newState.elementY = elementY;\n        newState.elementPositionX = elementPositionX;\n        newState.elementPositionY = elementPositionY;\n      }\n\n      setState((s) => {\n        return {\n          ...s,\n          ...newState,\n        };\n      });\n    };\n\n    document.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n\n  return [state, ref];\n}\n\nconst getConnection = () => {\n  return (\n    navigator?.connection ||\n    navigator?.mozConnection ||\n    navigator?.webkitConnection\n  );\n};\n\nconst useNetworkStateSubscribe = (callback) => {\n  window.addEventListener(\"online\", callback, { passive: true });\n  window.addEventListener(\"offline\", callback, { passive: true });\n\n  const connection = getConnection();\n\n  if (connection) {\n    connection.addEventListener(\"change\", callback, { passive: true });\n  }\n\n  return () => {\n    window.removeEventListener(\"online\", callback);\n    window.removeEventListener(\"offline\", callback);\n\n    if (connection) {\n      connection.removeEventListener(\"change\", callback);\n    }\n  };\n};\n\nconst getNetworkStateServerSnapshot = () => {\n  throw Error(\"useNetworkState is a client-only hook\");\n};\n\nexport function useNetworkState() {\n  const cache = React.useRef({});\n\n  const getSnapshot = () => {\n    const online = navigator.onLine;\n    const connection = getConnection();\n\n    const nextState = {\n      online,\n      downlink: connection?.downlink,\n      downlinkMax: connection?.downlinkMax,\n      effectiveType: connection?.effectiveType,\n      rtt: connection?.rtt,\n      saveData: connection?.saveData,\n      type: connection?.type,\n    };\n\n    if (isShallowEqual(cache.current, nextState)) {\n      return cache.current;\n    } else {\n      cache.current = nextState;\n      return nextState;\n    }\n  };\n\n  return React.useSyncExternalStore(\n    useNetworkStateSubscribe,\n    getSnapshot,\n    getNetworkStateServerSnapshot\n  );\n}\n\nexport function useObjectState(initialValue) {\n  const [state, setState] = React.useState(initialValue);\n\n  const handleUpdate = React.useCallback((arg) => {\n    if (typeof arg === \"function\") {\n      setState((s) => {\n        const newState = arg(s);\n\n        if (isPlainObject(newState)) {\n          return {\n            ...s,\n            ...newState,\n          };\n        }\n      });\n    }\n\n    if (isPlainObject(arg)) {\n      setState((s) => ({\n        ...s,\n        ...arg,\n      }));\n    }\n  }, []);\n\n  return [state, handleUpdate];\n}\n\nexport function useOrientation() {\n  const [orientation, setOrientation] = React.useState({\n    angle: 0,\n    type: \"landscape-primary\",\n  });\n\n  React.useLayoutEffect(() => {\n    const handleChange = () => {\n      const { angle, type } = window.screen.orientation;\n      setOrientation({\n        angle,\n        type,\n      });\n    };\n\n    const handle_orientationchange = () => {\n      setOrientation({\n        type: \"UNKNOWN\",\n        angle: window.orientation,\n      });\n    };\n\n    if (window.screen?.orientation) {\n      handleChange();\n      window.screen.orientation.addEventListener(\"change\", handleChange);\n    } else {\n      handle_orientationchange();\n      window.addEventListener(\"orientationchange\", handle_orientationchange);\n    }\n\n    return () => {\n      if (window.screen?.orientation) {\n        window.screen.orientation.removeEventListener(\"change\", handleChange);\n      } else {\n        window.removeEventListener(\n          \"orientationchange\",\n          handle_orientationchange\n        );\n      }\n    };\n  }, []);\n\n  return orientation;\n}\n\nconst usePreferredLanguageSubscribe = (cb) => {\n  window.addEventListener(\"languagechange\", cb);\n  return () => window.removeEventListener(\"languagechange\", cb);\n};\n\nconst getPreferredLanguageSnapshot = () => {\n  return navigator.language;\n};\n\nconst getPreferredLanguageServerSnapshot = () => {\n  throw Error(\"usePreferredLanguage is a client-only hook\");\n};\n\nexport function usePreferredLanguage() {\n  return React.useSyncExternalStore(\n    usePreferredLanguageSubscribe,\n    getPreferredLanguageSnapshot,\n    getPreferredLanguageServerSnapshot\n  );\n}\n\nexport function usePrevious(value) {\n  const [current, setCurrent] = React.useState(value);\n  const [previous, setPrevious] = React.useState(null);\n\n  if (value !== current) {\n    setPrevious(current);\n    setCurrent(value);\n  }\n\n  return previous;\n}\n\nexport function useQueue(initialValue = []) {\n  const [queue, setQueue] = React.useState(initialValue);\n\n  const add = React.useCallback((element) => {\n    setQueue((q) => [...q, element]);\n  }, []);\n\n  const remove = React.useCallback(() => {\n    let removedElement;\n\n    setQueue(([first, ...q]) => {\n      removedElement = first;\n      return q;\n    });\n\n    return removedElement;\n  }, []);\n\n  const clear = React.useCallback(() => {\n    setQueue([]);\n  }, []);\n\n  return {\n    add,\n    remove,\n    clear,\n    first: queue[0],\n    last: queue[queue.length - 1],\n    size: queue.length,\n    queue,\n  };\n}\n\nexport function useRenderCount() {\n  const count = React.useRef(0);\n\n  count.current++;\n\n  return count.current;\n}\n\nexport function useRenderInfo(name = \"Unknown\") {\n  const count = React.useRef(0);\n  const lastRender = React.useRef();\n  const now = Date.now();\n\n  count.current++;\n\n  React.useEffect(() => {\n    lastRender.current = Date.now();\n  });\n\n  const sinceLastRender = lastRender.current ? now - lastRender.current : 0;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const info = {\n      name,\n      renders: count.current,\n      sinceLastRender,\n      timestamp: now,\n    };\n\n    console.log(info);\n\n    return info;\n  }\n}\n\nexport function useScript(src, options = {}) {\n  const [status, setStatus] = React.useState(\"loading\");\n  const optionsRef = React.useRef(options);\n\n  React.useEffect(() => {\n    let script = document.querySelector(`script[src=\"${src}\"]`);\n\n    const domStatus = script?.getAttribute(\"data-status\");\n    if (domStatus) {\n      setStatus(domStatus);\n      return;\n    }\n\n    if (script === null) {\n      script = document.createElement(\"script\");\n      script.src = src;\n      script.async = true;\n      script.setAttribute(\"data-status\", \"loading\");\n      document.body.appendChild(script);\n\n      const handleScriptLoad = () => {\n        script.setAttribute(\"data-status\", \"ready\");\n        setStatus(\"ready\");\n        removeEventListeners();\n      };\n\n      const handleScriptError = () => {\n        script.setAttribute(\"data-status\", \"error\");\n        setStatus(\"error\");\n        removeEventListeners();\n      };\n\n      const removeEventListeners = () => {\n        script.removeEventListener(\"load\", handleScriptLoad);\n        script.removeEventListener(\"error\", handleScriptError);\n      };\n\n      script.addEventListener(\"load\", handleScriptLoad);\n      script.addEventListener(\"error\", handleScriptError);\n\n      const removeOnUnmount = optionsRef.current.removeOnUnmount;\n\n      return () => {\n        if (removeOnUnmount === true) {\n          script.remove();\n          removeEventListeners();\n        }\n      };\n    } else {\n      setStatus(\"unknown\");\n    }\n  }, [src]);\n\n  return status;\n}\n\nconst setSessionStorageItem = (key, value) => {\n  const stringifiedValue = JSON.stringify(value);\n  window.sessionStorage.setItem(key, stringifiedValue);\n  dispatchStorageEvent(key, stringifiedValue);\n};\n\nconst removeSessionStorageItem = (key) => {\n  window.sessionStorage.removeItem(key);\n  dispatchStorageEvent(key, null);\n};\n\nconst getSessionStorageItem = (key) => {\n  return window.sessionStorage.getItem(key);\n};\n\nconst useSessionStorageSubscribe = (callback) => {\n  window.addEventListener(\"storage\", callback);\n  return () => window.removeEventListener(\"storage\", callback);\n};\n\nconst getSessionStorageServerSnapshot = () => {\n  throw Error(\"useSessionStorage is a client-only hook\");\n};\n\nexport function useSessionStorage(key, initialValue) {\n  const getSnapshot = () => getSessionStorageItem(key);\n\n  const store = React.useSyncExternalStore(\n    useSessionStorageSubscribe,\n    getSnapshot,\n    getSessionStorageServerSnapshot\n  );\n\n  const setState = React.useCallback(\n    (v) => {\n      try {\n        const nextState = typeof v === \"function\" ? v(JSON.parse(store)) : v;\n\n        if (nextState === undefined || nextState === null) {\n          removeSessionStorageItem(key);\n        } else {\n          setSessionStorageItem(key, nextState);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    [key, store]\n  );\n\n  React.useEffect(() => {\n    if (\n      getSessionStorageItem(key) === null &&\n      typeof initialValue !== \"undefined\"\n    ) {\n      setSessionStorageItem(key, initialValue);\n    }\n  }, [key, initialValue]);\n\n  return [store ? JSON.parse(store) : initialValue, setState];\n}\n\nexport function useSet(values) {\n  const setRef = React.useRef(new Set(values));\n  const [, reRender] = React.useReducer((x) => x + 1, 0);\n\n  setRef.current.add = (...args) => {\n    const res = Set.prototype.add.apply(setRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  setRef.current.clear = (...args) => {\n    Set.prototype.clear.apply(setRef.current, args);\n    reRender();\n  };\n\n  setRef.current.delete = (...args) => {\n    const res = Set.prototype.delete.apply(setRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  return setRef.current;\n}\n\nexport function useThrottle(value, interval = 500) {\n  const [throttledValue, setThrottledValue] = React.useState(value);\n  const lastUpdated = React.useRef(null);\n\n  React.useEffect(() => {\n    const now = Date.now();\n\n    if (lastUpdated.current && now >= lastUpdated.current + interval) {\n      lastUpdated.current = now;\n      setThrottledValue(value);\n    } else {\n      const id = window.setTimeout(() => {\n        lastUpdated.current = now;\n        setThrottledValue(value);\n      }, interval);\n\n      return () => window.clearTimeout(id);\n    }\n  }, [value, interval]);\n\n  return throttledValue;\n}\n\nexport function useToggle(initialValue) {\n  const [on, setOn] = React.useState(() => {\n    if (typeof initialValue === \"boolean\") {\n      return initialValue;\n    }\n\n    return Boolean(initialValue);\n  });\n\n  const handleToggle = React.useCallback((value) => {\n    if (typeof value === \"boolean\") {\n      return setOn(value);\n    }\n\n    return setOn((v) => !v);\n  }, []);\n\n  return [on, handleToggle];\n}\n\nconst useVisibilityChangeSubscribe = (callback) => {\n  document.addEventListener(\"visibilitychange\", callback);\n\n  return () => {\n    document.removeEventListener(\"visibilitychange\", callback);\n  };\n};\n\nconst getVisibilityChangeSnapshot = () => {\n  return document.visibilityState;\n};\n\nconst getVisibilityChangeServerSnapshot = () => {\n  throw Error(\"useVisibilityChange is a client-only hook\");\n};\n\nexport function useVisibilityChange() {\n  const visibilityState = React.useSyncExternalStore(\n    useVisibilityChangeSubscribe,\n    getVisibilityChangeSnapshot,\n    getVisibilityChangeServerSnapshot\n  );\n\n  return visibilityState === \"visible\";\n}\n\nexport function useWindowScroll() {\n  const [state, setState] = React.useState({\n    x: null,\n    y: null,\n  });\n\n  const scrollTo = React.useCallback((...args) => {\n    if (typeof args[0] === \"object\") {\n      window.scrollTo(args[0]);\n    } else if (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n      window.scrollTo(args[0], args[1]);\n    } else {\n      throw new Error(\n        `Invalid arguments passed to scrollTo. See here for more info. https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo`\n      );\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    const handleScroll = () => {\n      setState({ x: window.scrollX, y: window.scrollY });\n    };\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return [state, scrollTo];\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = React.useState({\n    width: null,\n    height: null,\n  });\n\n  React.useLayoutEffect(() => {\n    const handleResize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return size;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"university\":\"University_university__Uy3T7\",\"info\":\"University_info__kXy87\",\"title\":\"University_title__9tkcj\",\"controls\":\"University_controls__Fvv7q\",\"description\":\"University_description__wkL+u\",\"universityIcon\":\"University_universityIcon__lHbDX\"};","import React, { useState } from \"react\";\n\nimport { HiPencilAlt, HiTrash } from \"react-icons/hi\";\nimport styles from \"./University.module.css\";\n\nimport Modal from \"../Modal\";\nimport Paper from \"../Paper\";\n\nimport schoolImage from \"../../images/School1.png\";\n\nexport default function University() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  function toggleModal() {\n    setIsModalVisible(!isModalVisible);\n  }\n\n  return (\n    <section className=\"section\">\n      <Modal\n        isOpen={isModalVisible}\n        handleClose={() => {\n          toggleModal();\n        }}\n        header={\"University\"}\n      >\n        Add edit form\n      </Modal>\n\n      <div className={styles.university}>\n        <div className={styles.info}>\n          <Paper>\n            <img\n              className={styles.universityIcon}\n              src={schoolImage}\n              alt=\"School\"\n            />\n            <p>University</p>\n            <h3 className={styles.title}>MIT</h3>\n            <div className={styles.controls}>\n              <button className=\"button-icon\" onClick={toggleModal}>\n                <HiPencilAlt />\n              </button>\n              <button className=\"button-icon\">\n                <HiTrash />\n              </button>\n            </div>\n          </Paper>\n        </div>\n\n        <div className={styles.description}>\n          Experience, a concentration of knowledge and the ability to avoid most\n          recruiting mistakes. We know what most local and foreign companies\n          want and we can give it to you. And we are constantly improving our\n          programming courses, adding something new there. You can see the\n          success stories of our alumni for yourself to see the effectiveness of\n          our teaching methodology. Yes, we will start with the basics and the\n          most basic information. We know that most people come to us with zero\n          knowledge.\n        </div>\n      </div>\n    </section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Faculties_list__yzYL9\",\"form\":\"Faculties_form__6HrWN\"};","import React from 'react';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FaPlusCircle } from 'react-icons/fa';\n\nimport styles from './Faculties.module.css';\n\nimport Button from '../Button';\nimport Input from '../common/Input';\nimport Loading from '../common/Loading';\nimport Alert from '../common/Alert';\nimport InfoBlock from '../InfoBlock/InfoBlock';\nimport Paper from '../Paper';\n\nimport useToggle from '../../hooks/useToggle';\n\nimport {\n  selectFaculties,\n  selectFacultiesError,\n  selectFacultiesLoading,\n} from '../../redux/selectors';\n\nimport {\n  addFaculty,\n  updateFaculty,\n  deleteFaculty,\n} from '../../redux/operations';\n\nconst INITIAL_FORM_STATE = {\n  name: '',\n  description: '',\n  history: '',\n};\n\nexport default function FacultiesList() {\n  const [isFormVisible, toggleForm] = useToggle(false);\n  const [formData, setFormData] = useState({ ...INITIAL_FORM_STATE });\n\n  const dispatch = useDispatch();\n\n  const faculties = useSelector(selectFaculties);\n  const loading = useSelector(selectFacultiesLoading);\n  const error = useSelector(selectFacultiesError);\n\n  function renderList(items) {\n    return items.map(item => (\n      <Paper key={item.id}>\n        <InfoBlock\n          id={item.id}\n          info={item.name}\n          onEdit={updateFaculty}\n          onDelete={deleteFaculty}\n        />\n      </Paper>\n    ));\n  }\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const data = formData;\n    dispatch(addFaculty(data));\n    setFormData({ ...INITIAL_FORM_STATE });\n    toggleForm();\n  }\n\n  return (\n    <section className=\"section\">\n      <h2 className=\"h2\">Faculty</h2>\n\n      <div className={styles.list}>\n        {loading && <Loading />}\n        {error && <Alert message={error} />}\n        {renderList(faculties)}\n      </div>\n\n      {isFormVisible && (\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <h3>Adding a faculty</h3>\n          <Input\n            label=\"name\"\n            name=\"name\"\n            type=\"text\"\n            value={formData.name}\n            handleChange={handleChange}\n            required={true}\n          />\n\n          <Input\n            label=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={formData.description}\n            handleChange={handleChange}\n            required={true}\n          />\n\n          <Input\n            label=\"history\"\n            name=\"history\"\n            type=\"text\"\n            value={formData.history}\n            handleChange={handleChange}\n            required={true}\n          />\n\n          <Button type=\"submit\" handleClick={() => {}}>\n            Invite\n          </Button>\n        </form>\n      )}\n\n      <Button handleClick={toggleForm}>\n        <FaPlusCircle />\n        Add Faculty\n      </Button>\n    </section>\n  );\n}\n","import FacultiesList from './Faculties';\n\nexport default FacultiesList;\n","import React from 'react';\nimport { useRef } from 'react';\n\nimport Tutors from '../../components/Tutors';\nimport University from '../../components/University/University';\nimport Faculties from '../../components/Faculties';\n\nexport default function UniversityPage() {\n  const isTrueRef = useRef(true);\n\n  const inputRef = useRef(null);\n\n  function changeIsTrueRef() {\n    if (!isTrueRef?.current) {\n      return false;\n    }\n\n    isTrueRef.current = false;\n  }\n\n  return (\n    <>\n      <input id=\"inputForRef\" ref={inputRef} />\n\n      <button onClick={() => changeIsTrueRef()}> Toggle Value </button>\n      <h1 className=\"page-title\">University Information</h1>\n      <University />\n      <Tutors />\n      <Faculties />\n    </>\n  );\n}\n"],"names":["InfoBlock","_ref","type","id","info","onDelete","onEdit","modal","setModal","useState","newName","setNewName","isModalOpen","setIsModalOpen","typeModal","setTypeModal","dispatch","useDispatch","handleKeyDown","event","key","useEffect","document","addEventListener","removeEventListener","console","log","_jsxs","className","style","children","_jsx","Link","to","onClick","handleModal","BsThreeDotsVertical","openModalEdit","BsPencilSquare","openModalDelete","BiSolidTrash","Modal","isOpen","onClose","onCloseModal","_Fragment","src","editImg","width","alt","onChange","target","value","name","placeholder","handlerEdit","deleteImg","handlerDelete","modalOverlay","modalContent","closeButton","variant","handleClick","styles","item","handleDelete","firstName","lastName","email","phone","city","options","Button","FaTrash","label","handleChange","required","inputProps","pattern","title","htmlFor","message","INITIAL_FORM_STATE","searchTerm","setSearchTerm","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","React","handler","setTimeout","clearTimeout","useDebounce","isFormVisible","toggleForm","useToggle","formData","setFormData","tutors","useSelector","selectTutors","loading","selectTutorsLoading","error","selectTutorsError","evt","getTutorsCount","length","filteredTutorsList","filter","tutor","toLowerCase","includes","e","Loading","Alert","items","map","Tutor","deleteTutor","onSubmit","preventDefault","data","addTutor","Input","FaPlusCircle","University","isModalVisible","setIsModalVisible","toggleModal","handleClose","header","university","Paper","universityIcon","schoolImage","controls","HiPencilAlt","HiTrash","description","history","faculties","selectFaculties","selectFacultiesLoading","selectFacultiesError","updateFaculty","deleteFaculty","addFaculty","UniversityPage","isTrueRef","useRef","inputRef","ref","current","changeIsTrueRef","Tutors","Faculties"],"sourceRoot":""}