{"version":3,"file":"static/js/243.1f705331.chunk.js","mappings":"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","sources":["webpack://react-app-education/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"welcome\":\"RegisterForm_welcome__8c7jh\",\"form\":\"RegisterForm_form__Tv43W\",\"inputGroup\":\"RegisterForm_inputGroup__o+DvT\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"error\":\"RegisterForm_error__yDHjz\",\"submitButton\":\"RegisterForm_submitButton__sSAUK\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport css from './RegisterForm.module.css';\n\nimport { register } from '../../redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState({ name: '', email: '', password: '' });\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormData(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const validateForm = () => {\n    let valid = true;\n    let newErrors = { name: '', email: '', password: '' };\n\n    if (!formData.name) {\n      newErrors.name = 'Username is required';\n      valid = false;\n    } else if (!/^[a-zA-Z0-9]{3,}$/.test(formData.name)) {\n      newErrors.name =\n        'Username must be at least 3 characters and contain only letters or numbers';\n      valid = false;\n    }\n\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n      valid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is not valid';\n      valid = false;\n    }\n\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n      valid = false;\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n      valid = false;\n    } else if (\n      !/[A-Z]/.test(formData.password) ||\n      !/[0-9]/.test(formData.password)\n    ) {\n      newErrors.password =\n        'Password must contain at least one uppercase letter and one number';\n      valid = false;\n    }\n\n    setErrors(newErrors);\n    return valid;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (validateForm()) {\n      dispatch(\n        register({\n          name: formData.name,\n          email: formData.email,\n          password: formData.password,\n        })\n      );\n      setFormData({ name: '', email: '', password: '' });\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.welcome}>\n        Welcome to the Educational Community Platform!\n      </h1>\n      <h2 className={css.label}>Sign Up to Continue</h2>\n      <form className={css.form} autoComplete=\"off\" onSubmit={handleSubmit}>\n        <div className={css.inputGroup}>\n          <label className={css.label}>Username</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            className={css.input}\n          />\n          {errors.name && <span className={css.error}>{errors.name}</span>}\n        </div>\n\n        <div className={css.inputGroup}>\n          <label className={css.label}>Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            className={css.input}\n          />\n          {errors.email && <span className={css.error}>{errors.email}</span>}\n        </div>\n\n        <div className={css.inputGroup}>\n          <label className={css.label}>Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            className={css.input}\n          />\n          {errors.password && (\n            <span className={css.error}>{errors.password}</span>\n          )}\n        </div>\n\n        <button type=\"submit\" className={css.submitButton}>\n          Register\n        </button>\n      </form>\n      <ToastContainer />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","formData","setFormData","useState","name","email","password","errors","setErrors","handleChange","event","value","target","prevState","_jsxs","className","css","children","_jsx","autoComplete","onSubmit","preventDefault","validateForm","valid","newErrors","test","length","register","type","onChange","ToastContainer","Register"],"sourceRoot":""}